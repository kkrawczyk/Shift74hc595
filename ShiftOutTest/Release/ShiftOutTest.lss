
ShiftOutTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000338  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000338  000003cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800086  00800086  000003f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f2  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	e8 e3       	ldi	r30, 0x38	; 56
  32:	f3 e0       	ldi	r31, 0x03	; 3
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	a6 38       	cpi	r26, 0x86	; 134
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	a6 e8       	ldi	r26, 0x86	; 134
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	ab 38       	cpi	r26, 0x8B	; 139
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	41 d1       	rcall	.+642    	; 0x2d4 <main>
  52:	70 c1       	rjmp	.+736    	; 0x334 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <getNthByte>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	30 e0       	ldi	r19, 0x00	; 0
  5a:	06 2e       	mov	r0, r22
  5c:	01 c0       	rjmp	.+2      	; 0x60 <getNthByte+0xa>
  5e:	22 0f       	add	r18, r18
  60:	0a 94       	dec	r0
  62:	ea f7       	brpl	.-6      	; 0x5e <getNthByte+0x8>
  64:	82 23       	and	r24, r18
  66:	90 e0       	ldi	r25, 0x00	; 0
  68:	02 c0       	rjmp	.+4      	; 0x6e <getNthByte+0x18>
  6a:	95 95       	asr	r25
  6c:	87 95       	ror	r24
  6e:	6a 95       	dec	r22
  70:	e2 f7       	brpl	.-8      	; 0x6a <getNthByte+0x14>
  72:	08 95       	ret

00000074 <setNthByteHigh>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	30 e0       	ldi	r19, 0x00	; 0
  78:	06 2e       	mov	r0, r22
  7a:	01 c0       	rjmp	.+2      	; 0x7e <setNthByteHigh+0xa>
  7c:	22 0f       	add	r18, r18
  7e:	0a 94       	dec	r0
  80:	ea f7       	brpl	.-6      	; 0x7c <setNthByteHigh+0x8>
  82:	fc 01       	movw	r30, r24
  84:	30 81       	ld	r19, Z
  86:	32 2b       	or	r19, r18
  88:	30 83       	st	Z, r19
  8a:	08 95       	ret

0000008c <setNthByteLow>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	06 2e       	mov	r0, r22
  92:	01 c0       	rjmp	.+2      	; 0x96 <setNthByteLow+0xa>
  94:	22 0f       	add	r18, r18
  96:	0a 94       	dec	r0
  98:	ea f7       	brpl	.-6      	; 0x94 <setNthByteLow+0x8>
  9a:	20 95       	com	r18
  9c:	fc 01       	movw	r30, r24
  9e:	30 81       	ld	r19, Z
  a0:	32 23       	and	r19, r18
  a2:	30 83       	st	Z, r19
  a4:	08 95       	ret

000000a6 <setLcdFunctions>:
  a6:	90 91 87 00 	lds	r25, 0x0087
  aa:	98 2b       	or	r25, r24
  ac:	90 93 87 00 	sts	0x0087, r25
  b0:	08 95       	ret

000000b2 <setLcdPin>:
  b2:	61 11       	cpse	r22, r1
  b4:	05 c0       	rjmp	.+10     	; 0xc0 <setLcdPin+0xe>
  b6:	68 2f       	mov	r22, r24
  b8:	89 e8       	ldi	r24, 0x89	; 137
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	e7 df       	rcall	.-50     	; 0x8c <setNthByteLow>
  be:	04 c0       	rjmp	.+8      	; 0xc8 <setLcdPin+0x16>
  c0:	68 2f       	mov	r22, r24
  c2:	89 e8       	ldi	r24, 0x89	; 137
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	d6 df       	rcall	.-84     	; 0x74 <setNthByteHigh>
  c8:	80 91 89 00 	lds	r24, 0x0089
  cc:	01 c1       	rjmp	.+514    	; 0x2d0 <writeBytes>

000000ce <lcdPulseEnable>:
  ce:	60 e0       	ldi	r22, 0x00	; 0
  d0:	85 e0       	ldi	r24, 0x05	; 5
  d2:	ef df       	rcall	.-34     	; 0xb2 <setLcdPin>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <lcdPulseEnable+0x8>
  d6:	61 e0       	ldi	r22, 0x01	; 1
  d8:	85 e0       	ldi	r24, 0x05	; 5
  da:	eb df       	rcall	.-42     	; 0xb2 <setLcdPin>
  dc:	00 c0       	rjmp	.+0      	; 0xde <lcdPulseEnable+0x10>
  de:	60 e0       	ldi	r22, 0x00	; 0
  e0:	85 e0       	ldi	r24, 0x05	; 5
  e2:	e7 df       	rcall	.-50     	; 0xb2 <setLcdPin>
  e4:	88 e2       	ldi	r24, 0x28	; 40
  e6:	8a 95       	dec	r24
  e8:	f1 f7       	brne	.-4      	; 0xe6 <lcdPulseEnable+0x18>
  ea:	00 00       	nop
  ec:	08 95       	ret

000000ee <lcdWrite4Bits>:
  ee:	0f 93       	push	r16
  f0:	1f 93       	push	r17
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	c8 2f       	mov	r28, r24
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	ad df       	rcall	.-166    	; 0x56 <getNthByte>
  fc:	08 2f       	mov	r16, r24
  fe:	61 e0       	ldi	r22, 0x01	; 1
 100:	8c 2f       	mov	r24, r28
 102:	a9 df       	rcall	.-174    	; 0x56 <getNthByte>
 104:	18 2f       	mov	r17, r24
 106:	62 e0       	ldi	r22, 0x02	; 2
 108:	8c 2f       	mov	r24, r28
 10a:	a5 df       	rcall	.-182    	; 0x56 <getNthByte>
 10c:	d8 2f       	mov	r29, r24
 10e:	63 e0       	ldi	r22, 0x03	; 3
 110:	8c 2f       	mov	r24, r28
 112:	a1 df       	rcall	.-190    	; 0x56 <getNthByte>
 114:	c8 2f       	mov	r28, r24
 116:	60 2f       	mov	r22, r16
 118:	84 e0       	ldi	r24, 0x04	; 4
 11a:	cb df       	rcall	.-106    	; 0xb2 <setLcdPin>
 11c:	61 2f       	mov	r22, r17
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	c8 df       	rcall	.-112    	; 0xb2 <setLcdPin>
 122:	6d 2f       	mov	r22, r29
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	c5 df       	rcall	.-118    	; 0xb2 <setLcdPin>
 128:	6c 2f       	mov	r22, r28
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	c2 df       	rcall	.-124    	; 0xb2 <setLcdPin>
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	1f 91       	pop	r17
 134:	0f 91       	pop	r16
 136:	cb cf       	rjmp	.-106    	; 0xce <lcdPulseEnable>

00000138 <lcdSend>:
 138:	cf 93       	push	r28
 13a:	c8 2f       	mov	r28, r24
 13c:	87 e0       	ldi	r24, 0x07	; 7
 13e:	b9 df       	rcall	.-142    	; 0xb2 <setLcdPin>
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	86 e0       	ldi	r24, 0x06	; 6
 144:	b6 df       	rcall	.-148    	; 0xb2 <setLcdPin>
 146:	8c 2f       	mov	r24, r28
 148:	82 95       	swap	r24
 14a:	8f 70       	andi	r24, 0x0F	; 15
 14c:	d0 df       	rcall	.-96     	; 0xee <lcdWrite4Bits>
 14e:	8c 2f       	mov	r24, r28
 150:	cf 91       	pop	r28
 152:	cd cf       	rjmp	.-102    	; 0xee <lcdWrite4Bits>

00000154 <lcdWrite>:
 154:	61 e0       	ldi	r22, 0x01	; 1
 156:	f0 cf       	rjmp	.-32     	; 0x138 <lcdSend>

00000158 <lcdWriteText>:
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	ec 01       	movw	r28, r24
 15e:	89 91       	ld	r24, Y+
 160:	88 23       	and	r24, r24
 162:	11 f0       	breq	.+4      	; 0x168 <__stack+0x9>
 164:	f7 df       	rcall	.-18     	; 0x154 <lcdWrite>
 166:	fb cf       	rjmp	.-10     	; 0x15e <lcdWriteText+0x6>
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	08 95       	ret

0000016e <lcdCommand>:
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	e3 cf       	rjmp	.-58     	; 0x138 <lcdSend>

00000172 <ldcSetCursorBlinking>:
 172:	90 91 8a 00 	lds	r25, 0x008A
 176:	81 11       	cpse	r24, r1
 178:	02 c0       	rjmp	.+4      	; 0x17e <ldcSetCursorBlinking+0xc>
 17a:	9e 7f       	andi	r25, 0xFE	; 254
 17c:	01 c0       	rjmp	.+2      	; 0x180 <ldcSetCursorBlinking+0xe>
 17e:	91 60       	ori	r25, 0x01	; 1
 180:	90 93 8a 00 	sts	0x008A, r25
 184:	80 91 8a 00 	lds	r24, 0x008A
 188:	88 60       	ori	r24, 0x08	; 8
 18a:	f1 cf       	rjmp	.-30     	; 0x16e <lcdCommand>

0000018c <lcdSetCursor>:
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
 190:	cd b7       	in	r28, 0x3d	; 61
 192:	de b7       	in	r29, 0x3e	; 62
 194:	28 97       	sbiw	r28, 0x08	; 8
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	f8 94       	cli
 19a:	de bf       	out	0x3e, r29	; 62
 19c:	0f be       	out	0x3f, r0	; 63
 19e:	cd bf       	out	0x3d, r28	; 61
 1a0:	98 e0       	ldi	r25, 0x08	; 8
 1a2:	e0 e6       	ldi	r30, 0x60	; 96
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	de 01       	movw	r26, r28
 1a8:	11 96       	adiw	r26, 0x01	; 1
 1aa:	01 90       	ld	r0, Z+
 1ac:	0d 92       	st	X+, r0
 1ae:	9a 95       	dec	r25
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <lcdSetCursor+0x1e>
 1b2:	61 11       	cpse	r22, r1
 1b4:	61 e0       	ldi	r22, 0x01	; 1
 1b6:	e6 2f       	mov	r30, r22
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	ee 0f       	add	r30, r30
 1bc:	ff 1f       	adc	r31, r31
 1be:	21 e0       	ldi	r18, 0x01	; 1
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	2c 0f       	add	r18, r28
 1c4:	3d 1f       	adc	r19, r29
 1c6:	e2 0f       	add	r30, r18
 1c8:	f3 1f       	adc	r31, r19
 1ca:	90 81       	ld	r25, Z
 1cc:	98 0f       	add	r25, r24
 1ce:	89 2f       	mov	r24, r25
 1d0:	80 68       	ori	r24, 0x80	; 128
 1d2:	28 96       	adiw	r28, 0x08	; 8
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	f8 94       	cli
 1d8:	de bf       	out	0x3e, r29	; 62
 1da:	0f be       	out	0x3f, r0	; 63
 1dc:	cd bf       	out	0x3d, r28	; 61
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	c5 cf       	rjmp	.-118    	; 0x16e <lcdCommand>

000001e4 <lcdClear>:
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	c3 df       	rcall	.-122    	; 0x16e <lcdCommand>
 1e8:	87 e5       	ldi	r24, 0x57	; 87
 1ea:	92 e0       	ldi	r25, 0x02	; 2
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <lcdClear+0x8>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcdClear+0xe>
 1f2:	00 00       	nop
 1f4:	08 95       	ret

000001f6 <lcdDisplay>:
 1f6:	80 91 8a 00 	lds	r24, 0x008A
 1fa:	98 2f       	mov	r25, r24
 1fc:	94 60       	ori	r25, 0x04	; 4
 1fe:	90 93 8a 00 	sts	0x008A, r25
 202:	8c 60       	ori	r24, 0x0C	; 12
 204:	b4 cf       	rjmp	.-152    	; 0x16e <lcdCommand>

00000206 <lcdSetCursorVisible>:
 206:	90 91 8a 00 	lds	r25, 0x008A
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	11 f4       	brne	.+4      	; 0x212 <lcdSetCursorVisible+0xc>
 20e:	92 60       	ori	r25, 0x02	; 2
 210:	01 c0       	rjmp	.+2      	; 0x214 <lcdSetCursorVisible+0xe>
 212:	9d 7f       	andi	r25, 0xFD	; 253
 214:	90 93 8a 00 	sts	0x008A, r25
 218:	80 91 8a 00 	lds	r24, 0x008A
 21c:	88 60       	ori	r24, 0x08	; 8
 21e:	a7 cf       	rjmp	.-178    	; 0x16e <lcdCommand>

00000220 <lcdSendOnly4>:
 220:	cf 93       	push	r28
 222:	c8 2f       	mov	r28, r24
 224:	87 e0       	ldi	r24, 0x07	; 7
 226:	45 df       	rcall	.-374    	; 0xb2 <setLcdPin>
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	86 e0       	ldi	r24, 0x06	; 6
 22c:	42 df       	rcall	.-380    	; 0xb2 <setLcdPin>
 22e:	8c 2f       	mov	r24, r28
 230:	82 95       	swap	r24
 232:	8f 70       	andi	r24, 0x0F	; 15
 234:	cf 91       	pop	r28
 236:	5b cf       	rjmp	.-330    	; 0xee <lcdWrite4Bits>

00000238 <lcdCommand4bit>:
 238:	60 e0       	ldi	r22, 0x00	; 0
 23a:	f2 cf       	rjmp	.-28     	; 0x220 <lcdSendOnly4>

0000023c <initLcd>:
 23c:	25 d0       	rcall	.+74     	; 0x288 <initShift>
 23e:	10 92 87 00 	sts	0x0087, r1
 242:	84 e0       	ldi	r24, 0x04	; 4
 244:	80 93 8a 00 	sts	0x008A, r24
 248:	82 e0       	ldi	r24, 0x02	; 2
 24a:	80 93 86 00 	sts	0x0086, r24
 24e:	10 92 89 00 	sts	0x0089, r1
 252:	10 92 88 00 	sts	0x0088, r1
 256:	60 e0       	ldi	r22, 0x00	; 0
 258:	87 e0       	ldi	r24, 0x07	; 7
 25a:	2b df       	rcall	.-426    	; 0xb2 <setLcdPin>
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	86 e0       	ldi	r24, 0x06	; 6
 260:	28 df       	rcall	.-432    	; 0xb2 <setLcdPin>
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	85 e0       	ldi	r24, 0x05	; 5
 266:	25 df       	rcall	.-438    	; 0xb2 <setLcdPin>
 268:	80 91 87 00 	lds	r24, 0x0087
 26c:	80 62       	ori	r24, 0x20	; 32
 26e:	e4 df       	rcall	.-56     	; 0x238 <lcdCommand4bit>
 270:	88 e0       	ldi	r24, 0x08	; 8
 272:	19 df       	rcall	.-462    	; 0xa6 <setLcdFunctions>
 274:	80 91 87 00 	lds	r24, 0x0087
 278:	80 62       	ori	r24, 0x20	; 32
 27a:	79 df       	rcall	.-270    	; 0x16e <lcdCommand>
 27c:	bc df       	rcall	.-136    	; 0x1f6 <lcdDisplay>
 27e:	b2 df       	rcall	.-156    	; 0x1e4 <lcdClear>
 280:	80 91 86 00 	lds	r24, 0x0086
 284:	84 60       	ori	r24, 0x04	; 4
 286:	73 cf       	rjmp	.-282    	; 0x16e <lcdCommand>

00000288 <initShift>:
 288:	b8 9a       	sbi	0x17, 0	; 23
 28a:	b9 9a       	sbi	0x17, 1	; 23
 28c:	ba 9a       	sbi	0x17, 2	; 23
 28e:	c0 98       	cbi	0x18, 0	; 24
 290:	c1 98       	cbi	0x18, 1	; 24
 292:	c2 98       	cbi	0x18, 2	; 24
 294:	08 95       	ret

00000296 <writeBytesRCLK>:
 296:	1f 93       	push	r17
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	18 2f       	mov	r17, r24
 29e:	d6 2f       	mov	r29, r22
 2a0:	61 30       	cpi	r22, 0x01	; 1
 2a2:	09 f4       	brne	.+2      	; 0x2a6 <writeBytesRCLK+0x10>
 2a4:	c0 98       	cbi	0x18, 0	; 24
 2a6:	c0 e0       	ldi	r28, 0x00	; 0
 2a8:	c1 98       	cbi	0x18, 1	; 24
 2aa:	6c 2f       	mov	r22, r28
 2ac:	81 2f       	mov	r24, r17
 2ae:	d3 de       	rcall	.-602    	; 0x56 <getNthByte>
 2b0:	81 11       	cpse	r24, r1
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <writeBytesRCLK+0x22>
 2b4:	c2 98       	cbi	0x18, 2	; 24
 2b6:	01 c0       	rjmp	.+2      	; 0x2ba <writeBytesRCLK+0x24>
 2b8:	c2 9a       	sbi	0x18, 2	; 24
 2ba:	c1 9a       	sbi	0x18, 1	; 24
 2bc:	cf 5f       	subi	r28, 0xFF	; 255
 2be:	c8 30       	cpi	r28, 0x08	; 8
 2c0:	99 f7       	brne	.-26     	; 0x2a8 <writeBytesRCLK+0x12>
 2c2:	d1 30       	cpi	r29, 0x01	; 1
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <writeBytesRCLK+0x32>
 2c6:	c0 9a       	sbi	0x18, 0	; 24
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	1f 91       	pop	r17
 2ce:	08 95       	ret

000002d0 <writeBytes>:
 2d0:	61 e0       	ldi	r22, 0x01	; 1
 2d2:	e1 cf       	rjmp	.-62     	; 0x296 <writeBytesRCLK>

000002d4 <main>:
 2d4:	b3 df       	rcall	.-154    	; 0x23c <initLcd>
 2d6:	c0 e0       	ldi	r28, 0x00	; 0
 2d8:	d0 e0       	ldi	r29, 0x00	; 0
 2da:	8c 2f       	mov	r24, r28
 2dc:	4a df       	rcall	.-364    	; 0x172 <ldcSetCursorBlinking>
 2de:	8c 2f       	mov	r24, r28
 2e0:	92 df       	rcall	.-220    	; 0x206 <lcdSetCursorVisible>
 2e2:	21 e0       	ldi	r18, 0x01	; 1
 2e4:	c2 27       	eor	r28, r18
 2e6:	7e df       	rcall	.-260    	; 0x1e4 <lcdClear>
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	4f df       	rcall	.-354    	; 0x18c <lcdSetCursor>
 2ee:	88 e6       	ldi	r24, 0x68	; 104
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	32 df       	rcall	.-412    	; 0x158 <lcdWriteText>
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	49 df       	rcall	.-366    	; 0x18c <lcdSetCursor>
 2fa:	80 e7       	ldi	r24, 0x70	; 112
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	2c df       	rcall	.-424    	; 0x158 <lcdWriteText>
 300:	8f e7       	ldi	r24, 0x7F	; 127
 302:	9f e4       	ldi	r25, 0x4F	; 79
 304:	22 e1       	ldi	r18, 0x12	; 18
 306:	81 50       	subi	r24, 0x01	; 1
 308:	90 40       	sbci	r25, 0x00	; 0
 30a:	20 40       	sbci	r18, 0x00	; 0
 30c:	e1 f7       	brne	.-8      	; 0x306 <main+0x32>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <main+0x3c>
 310:	00 00       	nop
 312:	68 df       	rcall	.-304    	; 0x1e4 <lcdClear>
 314:	60 e0       	ldi	r22, 0x00	; 0
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	39 df       	rcall	.-398    	; 0x18c <lcdSetCursor>
 31a:	8b e7       	ldi	r24, 0x7B	; 123
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	1c df       	rcall	.-456    	; 0x158 <lcdWriteText>
 320:	8f e7       	ldi	r24, 0x7F	; 127
 322:	9f e4       	ldi	r25, 0x4F	; 79
 324:	22 e1       	ldi	r18, 0x12	; 18
 326:	81 50       	subi	r24, 0x01	; 1
 328:	90 40       	sbci	r25, 0x00	; 0
 32a:	20 40       	sbci	r18, 0x00	; 0
 32c:	e1 f7       	brne	.-8      	; 0x326 <main+0x52>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0x5c>
 330:	00 00       	nop
 332:	d3 cf       	rjmp	.-90     	; 0x2da <main+0x6>

00000334 <_exit>:
 334:	f8 94       	cli

00000336 <__stop_program>:
 336:	ff cf       	rjmp	.-2      	; 0x336 <__stop_program>
